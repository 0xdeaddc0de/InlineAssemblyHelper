instruction_dict = {
    "aaa": "ASCII Adjust After Addition",
    "aad": "ASCII Adjust AX Before Division",
    "aam": "ASCII Adjust AX After Multiply",
    "aas": "ASCII Adjust AL After Subtraction",
    "adc": "Add With Carry",
    "adcx": "Unsigned Integer Addition of Two Operands With Carry Flag",
    "addpd": "Add Packed Double Precision Floating-Point Values",
    "addps": "Add Packed Single Precision Floating-Point Values",
    "addsd": "Add Scalar Double Precision Floating-Point Values",
    "addss": "Add Scalar Single Precision Floating-Point Values",
    "addsubpd": "Packed Double Precision Floating-Point Add/Subtract",
    "addsubps": "Packed Single Precision Floating-Point Add/Subtract",
    "adox": "Unsigned Integer Addition of Two Operands With Overflow Flag",
    "aesdec": "Perform One Round of an AES Decryption Flow",
    "aesdec128kl": "Perform Ten Rounds of AES Decryption Flow With Key Locker Using 128-BitKey",
    "aesdec256kl": "Perform 14 Rounds of AES Decryption Flow With Key Locker Using 256-Bit Key",
    "aesdeclast": "Perform Last Round of an AES Decryption Flow",
    "aesdecwide128kl": "Perform Ten Rounds of AES Decryption Flow With Key Locker on 8 BlocksUsing 128-Bit Key",
    "aesdecwide256kl": "Perform 14 Rounds of AES Decryption Flow With Key Locker on 8 BlocksUsing 256-Bit Key",
    "aesenc": "Perform One Round of an AES Encryption Flow",
    "aesenc128kl": "Perform Ten Rounds of AES Encryption Flow With Key Locker Using 128-Bit Key",
    "aesenc256kl": "Perform 14 Rounds of AES Encryption Flow With Key Locker Using 256-Bit Key",
    "aesenclast": "Perform Last Round of an AES Encryption Flow",
    "aesencwide128kl": "Perform Ten Rounds of AES Encryption Flow With Key Locker on 8 BlocksUsing 128-Bit Key",
    "aesencwide256kl": "Perform 14 Rounds of AES Encryption Flow With Key Locker on 8 BlocksUsing 256-Bit Key",
    "aesimc": "Perform the AES InvMixColumn Transformation",
    "aeskeygenassist": "AES Round Key Generation Assist",
    "andn": "Logical AND NOT",
    "andnpd": "Bitwise Logical AND NOT of Packed Double Precision Floating-Point Values",
    "andnps": "Bitwise Logical AND NOT of Packed Single Precision Floating-Point Values",
    "andpd": "Bitwise Logical AND of Packed Double Precision Floating-Point Values",
    "andps": "Bitwise Logical AND of Packed Single Precision Floating-Point Values",
    "arpl": "Adjust RPL Field of Segment Selector",
    "bextr": "Bit Field Extract",
    "blendpd": "Blend Packed Double Precision Floating-Point Values",
    "blendps": "Blend Packed Single Precision Floating-Point Values",
    "blendvpd": "Variable Blend Packed Double Precision Floating-Point Values",
    "blendvps": "Variable Blend Packed Single Precision Floating-Point Values",
    "blsi": "Extract Lowest Set Isolated Bit",
    "blsmsk": "Get Mask Up to Lowest Set Bit",
    "blsr": "Reset Lowest Set Bit",
    "bndcl": "Check Lower Bound",
    "bndcn": "Check Upper Bound",
    "bndcu": "Check Upper Bound",
    "bndldx": "Load Extended Bounds Using Address Translation",
    "bndmk": "Make Bounds",
    "bndmov": "Move Bounds",
    "bndstx": "Store Extended Bounds Using Address Translation",
    "bound": "Check Array Index Against Bounds",
    "bsf": "Bit Scan Forward",
    "bsr": "Bit Scan Reverse",
    "bswap": "Byte Swap",
    "bt": "Bit Test",
    "btc": "Bit Test and Complement",
    "btr": "Bit Test and Reset",
    "bts": "Bit Test and Set",
    "bzhi": "Zero High Bits Starting with Specified Bit Position",
    "call": "Call Procedure",
    "cbw": "Convert Byte to Word/Convert Word to Doubleword/Convert Doubleword toQuadword",
    "cdq": "Convert Word to Doubleword/Convert Doubleword to Quadword",
    "cdqe": "Convert Byte to Word/Convert Word to Doubleword/Convert Doubleword toQuadword",
    "clac": "Clear AC Flag in EFLAGS Register",
    "clc": "Clear Carry Flag",
    "cld": "Clear Direction Flag",
    "cldemote": "Cache Line Demote",
    "clflush": "Flush Cache Line",
    "clflushopt": "Flush Cache Line Optimized",
    "cli": "Clear Interrupt Flag",
    "clrssbsy": "Clear Busy Flag in a Supervisor Shadow Stack Token",
    "clts": "Clear Task-Switched Flag in CR0",
    "clui": "Clear User Interrupt Flag",
    "clwb": "Cache Line Write Back",
    "cmc": "Complement Carry Flag",
    "cmovcc": "Conditional Move",
    "cmp": "Compare Two Operands",
    "cmppd": "Compare Packed Double Precision Floating-Point Values",
    "cmpps": "Compare Packed Single Precision Floating-Point Values",
    "cmps": "Compare String Operands",
    "cmpsb": "Compare String Operands",
    "cmpsd": "Compare String Operands",
    "cmpsd ": "Compare Scalar Double Precision Floating-Point Value",
    "cmpsq": "Compare String Operands",
    "cmpss": "Compare Scalar Single Precision Floating-Point Value",
    "cmpsw": "Compare String Operands",
    "cmpxchg": "Compare and Exchange",
    "cmpxchg16b": "Compare and Exchange Bytes",
    "cmpxchg8b": "Compare and Exchange Bytes",
    "comisd": "Compare Scalar Ordered Double Precision Floating-Point Values and Set EFLAGS",
    "comiss": "Compare Scalar Ordered Single Precision Floating-Point Values and Set EFLAGS",
    "cpuid": "CPU Identification",
    "cqo": "Convert Word to Doubleword/Convert Doubleword to Quadword",
    "crc32": "Accumulate CRC32 Value",
    "cvtdq2pd": "Convert Packed Doubleword Integers to Packed Double Precision Floating-PointValues",
    "cvtdq2ps": "Convert Packed Doubleword Integers to Packed Single Precision Floating-PointValues",
    "cvtpd2dq": "Convert Packed Double Precision Floating-Point Values to Packed DoublewordIntegers",
    "cvtpd2pi": "Convert Packed Double Precision Floating-Point Values to Packed Dword Integers",
    "cvtpd2ps": "Convert Packed Double Precision Floating-Point Values to Packed Single PrecisionFloating-Point Values",
    "cvtpi2pd": "Convert Packed Dword Integers to Packed Double Precision Floating-Point Values",
    "cvtpi2ps": "Convert Packed Dword Integers to Packed Single Precision Floating-Point Values",
    "cvtps2dq": "Convert Packed Single Precision Floating-Point Values to Packed SignedDoubleword Integer Values",
    "cvtps2pd": "Convert Packed Single Precision Floating-Point Values to Packed Double PrecisionFloating-Point Values",
    "cvtps2pi": "Convert Packed Single Precision Floating-Point Values to Packed Dword Integers",
    "cvtsd2si": "Convert Scalar Double Precision Floating-Point Value to Doubleword Integer",
    "cvtsd2ss": "Convert Scalar Double Precision Floating-Point Value to Scalar Single PrecisionFloating-Point Value",
    "cvtsi2sd": "Convert Doubleword Integer to Scalar Double Precision Floating-Point Value",
    "cvtsi2ss": "Convert Doubleword Integer to Scalar Single Precision Floating-Point Value",
    "cvtss2sd": "Convert Scalar Single Precision Floating-Point Value to Scalar Double PrecisionFloating-Point Value",
    "cvtss2si": "Convert Scalar Single Precision Floating-Point Value to Doubleword Integer",
    "cvttpd2dq": "Convert with Truncation Packed Double Precision Floating-Point Values to PackedDoubleword Integers",
    "cvttpd2pi": "Convert With Truncation Packed Double Precision Floating-Point Values to PackedDword Integers",
    "cvttps2dq": "Convert With Truncation Packed Single Precision Floating-Point Values to PackedSigned Doubleword Integer Values",
    "cvttps2pi": "Convert With Truncation Packed Single Precision Floating-Point Values to PackedDword Integers",
    "cvttsd2si": "Convert With Truncation Scalar Double Precision Floating-Point Value to SignedInteger",
    "cvttss2si": "Convert With Truncation Scalar Single Precision Floating-Point Value to Integer",
    "cwd": "Convert Word to Doubleword/Convert Doubleword to Quadword",
    "cwde": "Convert Byte to Word/Convert Word to Doubleword/Convert Doubleword toQuadword",
    "daa": "Decimal Adjust AL After Addition",
    "das": "Decimal Adjust AL After Subtraction",
    "dec": "Decrement by 1",
    "div": "Unsigned Divide",
    "divpd": "Divide Packed Double Precision Floating-Point Values",
    "divps": "Divide Packed Single Precision Floating-Point Values",
    "divsd": "Divide Scalar Double Precision Floating-Point Value",
    "divss": "Divide Scalar Single Precision Floating-Point Values",
    "dppd": "Dot Product of Packed Double Precision Floating-Point Values",
    "dpps": "Dot Product of Packed Single Precision Floating-Point Values",
    "emms": "Empty MMX Technology State",
    "encodekey128": "Encode 128-Bit Key With Key Locker",
    "encodekey256": "Encode 256-Bit Key With Key Locker",
    "endbr32": "Terminate an Indirect Branch in 32-bit and Compatibility Mode",
    "endbr64": "Terminate an Indirect Branch in 64-bit Mode",
    "enqcmd": "Enqueue Command",
    "enqcmds": "Enqueue Command Supervisor",
    "enter": "Make Stack Frame for Procedure Parameters",
    "extractps": "Extract Packed Floating-Point Values",
    "f2xm1": "Compute 2xâ€“1",
    "fabs": "Absolute Value",
    "fadd": "Add",
    "faddp": "Add",
    "fbld": "Load Binary Coded Decimal",
    "fbstp": "Store BCD Integer and Pop",
    "fchs": "Change Sign",
    "fclex": "Clear Exceptions",
    "fcmovcc": "Floating-Point Conditional Move",
    "fcom": "Compare Floating-Point Values",
    "fcomi": "Compare Floating-Point Values and Set EFLAGS",
    "fcomip": "Compare Floating-Point Values and Set EFLAGS",
    "fcomp": "Compare Floating-Point Values",
    "fcompp": "Compare Floating-Point Values",
    "fcos": "Cosine",
    "fdecstp": "Decrement Stack-Top Pointer",
    "fdiv": "Divide",
    "fdivp": "Divide",
    "fdivr": "Reverse Divide",
    "fdivrp": "Reverse Divide",
    "ffree": "Free Floating-Point Register",
    "fiadd": "Add",
    "ficom": "Compare Integer",
    "ficomp": "Compare Integer",
    "fidiv": "Divide",
    "fidivr": "Reverse Divide",
    "fild": "Load Integer",
    "fimul": "Multiply",
    "fincstp": "Increment Stack-Top Pointer",
    "finit": "Initialize Floating-Point Unit",
    "fist": "Store Integer",
    "fistp": "Store Integer",
    "fisttp": "Store Integer With Truncation",
    "fisub": "Subtract",
    "fisubr": "Reverse Subtract",
    "fld": "Load Floating-Point Value",
    "fld1": "Load Constant",
    "fldcw": "Load x87 FPU Control Word",
    "fldenv": "Load x87 FPU Environment",
    "fldl2e": "Load Constant",
    "fldl2t": "Load Constant",
    "fldlg2": "Load Constant",
    "fldln2": "Load Constant",
    "fldpi": "Load Constant",
    "fldz": "Load Constant",
    "fmul": "Multiply",
    "fmulp": "Multiply",
    "fnclex": "Clear Exceptions",
    "fninit": "Initialize Floating-Point Unit",
    "fnop": "No Operation",
    "fnsave": "Store x87 FPU State",
    "fnstcw": "Store x87 FPU Control Word",
    "fnstenv": "Store x87 FPU Environment",
    "fnstsw": "Store x87 FPU Status Word",
    "fpatan": "Partial Arctangent",
    "fprem": "Partial Remainder",
    "fprem1": "Partial Remainder",
    "fptan": "Partial Tangent",
    "frndint": "Round to Integer",
    "frstor": "Restore x87 FPU State",
    "fsave": "Store x87 FPU State",
    "fscale": "Scale",
    "fsin": "Sine",
    "fsincos": "Sine and Cosine",
    "fsqrt": "Square Root",
    "fst": "Store Floating-Point Value",
    "fstcw": "Store x87 FPU Control Word",
    "fstenv": "Store x87 FPU Environment",
    "fstp": "Store Floating-Point Value",
    "fstsw": "Store x87 FPU Status Word",
    "fsub": "Subtract",
    "fsubp": "Subtract",
    "fsubr": "Reverse Subtract",
    "fsubrp": "Reverse Subtract",
    "ftst": "TEST",
    "fucom": "Unordered Compare Floating-Point Values",
    "fucomi": "Compare Floating-Point Values and Set EFLAGS",
    "fucomip": "Compare Floating-Point Values and Set EFLAGS",
    "fucomp": "Unordered Compare Floating-Point Values",
    "fucompp": "Unordered Compare Floating-Point Values",
    "fwait": "Wait",
    "fxam": "Examine Floating-Point",
    "fxch": "Exchange Register Contents",
    "fxrstor": "Restore x87 FPU, MMX, XMM, and MXCSR State",
    "fxsave": "Save x87 FPU, MMX Technology, and SSE State",
    "fxtract": "Extract Exponent and Significand",
    "fyl2x": "Compute y âˆ— log2x",
    "fyl2xp1": "Compute y âˆ— log2(x +1)",
    "gf2p8affineinvqb": "Galois Field Affine Transformation Inverse",
    "gf2p8affineqb": "Galois Field Affine Transformation",
    "gf2p8mulb": "Galois Field Multiply Bytes",
    "haddpd": "Packed Double Precision Floating-Point Horizontal Add",
    "haddps": "Packed Single Precision Floating-Point Horizontal Add",
    "hreset": "History Reset",
    "hsubpd": "Packed Double Precision Floating-Point Horizontal Subtract",
    "hsubps": "Packed Single Precision Floating-Point Horizontal Subtract",
    "incsspd": "Increment Shadow Stack Pointer",
    "incsspq": "Increment Shadow Stack Pointer",
    "ins": "Input from Port to String",
    "insb": "Input from Port to String",
    "insd": "Input from Port to String",
    "insertps": "Insert Scalar Single Precision Floating-Point Value",
    "insw": "Input from Port to String",
    "into": "Call to Interrupt Procedure",
    "invd": "Invalidate Internal Caches",
    "invlpg": "Invalidate TLB Entries",
    "invpcid": "Invalidate Process-Context Identifier",
    "iret": "Interrupt Return",
    "iretd": "Interrupt Return",
    "iretq": "Interrupt Return",
    "kaddb": "ADD Two Masks",
    "kaddd": "ADD Two Masks",
    "kaddq": "ADD Two Masks",
    "kaddw": "ADD Two Masks",
    "kandb": "Bitwise Logical AND Masks",
    "kandd": "Bitwise Logical AND Masks",
    "kandnb": "Bitwise Logical AND NOT Masks",
    "kandnd": "Bitwise Logical AND NOT Masks",
    "kandnq": "Bitwise Logical AND NOT Masks",
    "kandnw": "Bitwise Logical AND NOT Masks",
    "kandq": "Bitwise Logical AND Masks",
    "kandw": "Bitwise Logical AND Masks",
    "kmovb": "Move From and to Mask Registers",
    "kmovd": "Move From and to Mask Registers",
    "kmovq": "Move From and to Mask Registers",
    "kmovw": "Move From and to Mask Registers",
    "knotb": "NOT Mask Register",
    "knotd": "NOT Mask Register",
    "knotq": "NOT Mask Register",
    "knotw": "NOT Mask Register",
    "korb": "Bitwise Logical OR Masks",
    "kord": "Bitwise Logical OR Masks",
    "korq": "Bitwise Logical OR Masks",
    "kortestb": "OR Masks and Set Flags",
    "kortestd": "OR Masks and Set Flags",
    "kortestq": "OR Masks and Set Flags",
    "kortestw": "OR Masks and Set Flags",
    "korw": "Bitwise Logical OR Masks",
    "kshiftlb": "Shift Left Mask Registers",
    "kshiftld": "Shift Left Mask Registers",
    "kshiftlq": "Shift Left Mask Registers",
    "kshiftlw": "Shift Left Mask Registers",
    "kshiftrb": "Shift Right Mask Registers",
    "kshiftrd": "Shift Right Mask Registers",
    "kshiftrq": "Shift Right Mask Registers",
    "kshiftrw": "Shift Right Mask Registers",
    "ktestb": "Packed Bit Test Masks and Set Flags",
    "ktestd": "Packed Bit Test Masks and Set Flags",
    "ktestq": "Packed Bit Test Masks and Set Flags",
    "ktestw": "Packed Bit Test Masks and Set Flags",
    "kunpckbw": "Unpack for Mask Registers",
    "kunpckdq": "Unpack for Mask Registers",
    "kunpckwd": "Unpack for Mask Registers",
    "kxnorb": "Bitwise Logical XNOR Masks",
    "kxnord": "Bitwise Logical XNOR Masks",
    "kxnorq": "Bitwise Logical XNOR Masks",
    "kxnorw": "Bitwise Logical XNOR Masks",
    "kxorb": "Bitwise Logical XOR Masks",
    "kxord": "Bitwise Logical XOR Masks",
    "kxorq": "Bitwise Logical XOR Masks",
    "kxorw": "Bitwise Logical XOR Masks",
    "lahf": "Load Status Flags Into AH Register",
    "lar": "Load Access Rights Byte",
    "lddqu": "Load Unaligned Integer 128 Bits",
    "ldmxcsr": "Load MXCSR Register",
    "lds": "Load Far Pointer",
    "ldtilecfg": "Load Tile Configuration",
    "lea": "Load Effective Address",
    "leave": "High Level Procedure Exit",
    "les": "Load Far Pointer",
    "lfence": "Load Fence",
    "lfs": "Load Far Pointer",
    "lgdt": "Load Global/Interrupt Descriptor Table Register",
    "lgs": "Load Far Pointer",
    "lidt": "Load Global/Interrupt Descriptor Table Register",
    "lldt": "Load Local Descriptor Table Register",
    "lmsw": "Load Machine Status Word",
    "loadiwkey": "Load Internal Wrapping Key With Key Locker",
    "lock": "Assert LOCK# Signal Prefix",
    "lods": "Load String",
    "lodsb": "Load String",
    "lodsd": "Load String",
    "lodsq": "Load String",
    "lodsw": "Load String",
    "loop": "Loop According to ECX Counter",
    "loopcc": "Loop According to ECX Counter",
    "lsl": "Load Segment Limit",
    "lss": "Load Far Pointer",
    "ltr": "Load Task Register",
    "lzcnt": "Count the Number of Leading Zero Bits",
    "maskmovdqu": "Store Selected Bytes of Double Quadword",
    "maskmovq": "Store Selected Bytes of Quadword",
    "maxpd": "Maximum of Packed Double Precision Floating-Point Values",
    "maxps": "Maximum of Packed Single Precision Floating-Point Values",
    "maxsd": "Return Maximum Scalar Double Precision Floating-Point Value",
    "maxss": "Return Maximum Scalar Single Precision Floating-Point Value",
    "mfence": "Memory Fence",
    "minpd": "Minimum of Packed Double Precision Floating-Point Values",
    "minps": "Minimum of Packed Single Precision Floating-Point Values",
    "minsd": "Return Minimum Scalar Double Precision Floating-Point Value",
    "minss": "Return Minimum Scalar Single Precision Floating-Point Value",
    "monitor": "Set Up Monitor Address",
    "mov": "Move",
    "mov ": "Move to/from Debug Registers",
    "movapd": "Move Aligned Packed Double Precision Floating-Point Values",
    "movaps": "Move Aligned Packed Single Precision Floating-Point Values",
    "movbe": "Move Data After Swapping Bytes",
    "movd": "Move Doubleword/Move Quadword",
    "movddup": "Replicate Double Precision Floating-Point Values",
    "movdir64b": "Move 64 Bytes as Direct Store",
    "movdiri": "Move Doubleword as Direct Store",
    "movdq2q": "Move Quadword from XMM to MMX Technology Register",
    "movdqa": "Move Aligned Packed Integer Values",
    "movdqu": "Move Unaligned Packed Integer Values",
    "movhlps": "Move Packed Single Precision Floating-Point Values High to Low",
    "movhpd": "Move High Packed Double Precision Floating-Point Value",
    "movhps": "Move High Packed Single Precision Floating-Point Values",
    "movlhps": "Move Packed Single Precision Floating-Point Values Low to High",
    "movlpd": "Move Low Packed Double Precision Floating-Point Value",
    "movlps": "Move Low Packed Single Precision Floating-Point Values",
    "movmskpd": "Extract Packed Double Precision Floating-Point Sign Mask",
    "movmskps": "Extract Packed Single Precision Floating-Point Sign Mask",
    "movntdq": "Store Packed Integers Using Non-Temporal Hint",
    "movntdqa": "Load Double Quadword Non-Temporal Aligned Hint",
    "movnti": "Store Doubleword Using Non-Temporal Hint",
    "movntpd": "Store Packed Double Precision Floating-Point Values Using Non-Temporal Hint",
    "movntps": "Store Packed Single Precision Floating-Point Values Using Non-Temporal Hint",
    "movntq": "Store of Quadword Using Non-Temporal Hint",
    "movq2dq": "Move Quadword from MMX Technology to XMM Register",
    "movs": "Move Data From String to String",
    "movsb": "Move Data From String to String",
    "movsd": "Move or Merge Scalar Double Precision Floating-Point Value",
    "movshdup": "Replicate Single Precision Floating-Point Values",
    "movsldup": "Replicate Single Precision Floating-Point Values",
    "movsq": "Move Data From String to String",
    "movss": "Move or Merge Scalar Single Precision Floating-Point Value",
    "movsw": "Move Data From String to String",
    "movsx": "Move With Sign-Extension",
    "movsxd": "Move With Sign-Extension",
    "movupd": "Move Unaligned Packed Double Precision Floating-Point Values",
    "movups": "Move Unaligned Packed Single Precision Floating-Point Values",
    "movzx": "Move With Zero-Extend",
    "mpsadbw": "Compute Multiple Packed Sums of Absolute Difference",
    "mulpd": "Multiply Packed Double Precision Floating-Point Values",
    "mulps": "Multiply Packed Single Precision Floating-Point Values",
    "mulsd": "Multiply Scalar Double Precision Floating-Point Value",
    "mulss": "Multiply Scalar Single Precision Floating-Point Values",
    "mulx": "Unsigned Multiply Without Affecting Flags",
    "mwait": "Monitor Wait",
    "orpd": "Bitwise Logical OR of Packed Double Precision Floating-Point Values",
    "orps": "Bitwise Logical OR of Packed Single Precision Floating-Point Values",
    "out": "Output to Port",
    "outs": "Output String to Port",
    "outsb": "Output String to Port",
    "outsd": "Output String to Port",
    "outsw": "Output String to Port",
    "pabsb": "Packed Absolute Value",
    "pabsd": "Packed Absolute Value",
    "pabsq": "Packed Absolute Value",
    "pabsw": "Packed Absolute Value",
    "packssdw": "Pack With Signed Saturation",
    "packsswb": "Pack With Signed Saturation",
    "packusdw": "Pack With Unsigned Saturation",
    "packuswb": "Pack With Unsigned Saturation",
    "paddb": "Add Packed Integers",
    "paddd": "Add Packed Integers",
    "paddq": "Add Packed Integers",
    "paddsb": "Add Packed Signed Integers with Signed Saturation",
    "paddsw": "Add Packed Signed Integers with Signed Saturation",
    "paddusb": "Add Packed Unsigned Integers With Unsigned Saturation",
    "paddusw": "Add Packed Unsigned Integers With Unsigned Saturation",
    "paddw": "Add Packed Integers",
    "palignr": "Packed Align Right",
    "pand": "Logical AND",
    "pandn": "Logical AND NOT",
    "pause": "Spin Loop Hint",
    "pavgb": "Average Packed Integers",
    "pavgw": "Average Packed Integers",
    "pblendvb": "Variable Blend Packed Bytes",
    "pblendw": "Blend Packed Words",
    "pclmulqdq": "Carry-Less Multiplication Quadword",
    "pcmpeqb": "Compare Packed Data for Equal",
    "pcmpeqd": "Compare Packed Data for Equal",
    "pcmpeqq": "Compare Packed Qword Data for Equal",
    "pcmpeqw": "Compare Packed Data for Equal",
    "pcmpestri": "Packed Compare Explicit Length Strings, Return Index",
    "pcmpestrm": "Packed Compare Explicit Length Strings, Return Mask",
    "pcmpgtb": "Compare Packed Signed Integers for Greater Than",
    "pcmpgtd": "Compare Packed Signed Integers for Greater Than",
    "pcmpgtq": "Compare Packed Data for Greater Than",
    "pcmpgtw": "Compare Packed Signed Integers for Greater Than",
    "pcmpistri": "Packed Compare Implicit Length Strings, Return Index",
    "pcmpistrm": "Packed Compare Implicit Length Strings, Return Mask",
    "pconfig": "Platform Configuration",
    "pdep": "Parallel Bits Deposit",
    "pext": "Parallel Bits Extract",
    "pextrb": "Extract Byte/Dword/Qword",
    "pextrd": "Extract Byte/Dword/Qword",
    "pextrq": "Extract Byte/Dword/Qword",
    "pextrw": "Extract Word",
    "phaddd": "Packed Horizontal Add",
    "phaddsw": "Packed Horizontal Add and Saturate",
    "phaddw": "Packed Horizontal Add",
    "phminposuw": "Packed Horizontal Word Minimum",
    "phsubd": "Packed Horizontal Subtract",
    "phsubsw": "Packed Horizontal Subtract and Saturate",
    "phsubw": "Packed Horizontal Subtract",
    "pinsrb": "Insert Byte/Dword/Qword",
    "pinsrd": "Insert Byte/Dword/Qword",
    "pinsrq": "Insert Byte/Dword/Qword",
    "pinsrw": "Insert Word",
    "pmaddubsw": "Multiply and Add Packed Signed and Unsigned Bytes",
    "pmaddwd": "Multiply and Add Packed Integers",
    "pmaxsb": "Maximum of Packed Signed Integers",
    "pmaxsd": "Maximum of Packed Signed Integers",
    "pmaxsq": "Maximum of Packed Signed Integers",
    "pmaxsw": "Maximum of Packed Signed Integers",
    "pmaxub": "Maximum of Packed Unsigned Integers",
    "pmaxud": "Maximum of Packed Unsigned Integers",
    "pmaxuq": "Maximum of Packed Unsigned Integers",
    "pmaxuw": "Maximum of Packed Unsigned Integers",
    "pminsb": "Minimum of Packed Signed Integers",
    "pminsd": "Minimum of Packed Signed Integers",
    "pminsq": "Minimum of Packed Signed Integers",
    "pminsw": "Minimum of Packed Signed Integers",
    "pminub": "Minimum of Packed Unsigned Integers",
    "pminud": "Minimum of Packed Unsigned Integers",
    "pminuq": "Minimum of Packed Unsigned Integers",
    "pminuw": "Minimum of Packed Unsigned Integers",
    "pmovmskb": "Move Byte Mask",
    "pmovsx": "Packed Move With Sign Extend",
    "pmovzx": "Packed Move With Zero Extend",
    "pmuldq": "Multiply Packed Doubleword Integers",
    "pmulhrsw": "Packed Multiply High With Round and Scale",
    "pmulhuw": "Multiply Packed Unsigned Integers and Store High Result",
    "pmulhw": "Multiply Packed Signed Integers and Store High Result",
    "pmulld": "Multiply Packed Integers and Store Low Result",
    "pmullq": "Multiply Packed Integers and Store Low Result",
    "pmullw": "Multiply Packed Signed Integers and Store Low Result",
    "pmuludq": "Multiply Packed Unsigned Doubleword Integers",
    "pop": "Pop a Value From the Stack",
    "popa": "Pop All General-Purpose Registers",
    "popad": "Pop All General-Purpose Registers",
    "popcnt": "Return the Count of Number of Bits Set to 1",
    "popf": "Pop Stack Into EFLAGS Register",
    "popfd": "Pop Stack Into EFLAGS Register",
    "popfq": "Pop Stack Into EFLAGS Register",
    "por": "Bitwise Logical OR",
    "prefetchw": "Prefetch Data Into Caches in Anticipation of a Write",
    "prefetchh": "Prefetch Data Into Caches",
    "psadbw": "Compute Sum of Absolute Differences",
    "pshufb": "Packed Shuffle Bytes",
    "pshufd": "Shuffle Packed Doublewords",
    "pshufhw": "Shuffle Packed High Words",
    "pshuflw": "Shuffle Packed Low Words",
    "pshufw": "Shuffle Packed Words",
    "psignb": "Packed SIGN",
    "psignd": "Packed SIGN",
    "psignw": "Packed SIGN",
    "pslld": "Shift Packed Data Left Logical",
    "pslldq": "Shift Double Quadword Left Logical",
    "psllq": "Shift Packed Data Left Logical",
    "psllw": "Shift Packed Data Left Logical",
    "psrad": "Shift Packed Data Right Arithmetic",
    "psraq": "Shift Packed Data Right Arithmetic",
    "psraw": "Shift Packed Data Right Arithmetic",
    "psrld": "Shift Packed Data Right Logical",
    "psrldq": "Shift Double Quadword Right Logical",
    "psrlq": "Shift Packed Data Right Logical",
    "psrlw": "Shift Packed Data Right Logical",
    "psubb": "Subtract Packed Integers",
    "psubd": "Subtract Packed Integers",
    "psubq": "Subtract Packed Quadword Integers",
    "psubsb": "Subtract Packed Signed Integers With Signed Saturation",
    "psubsw": "Subtract Packed Signed Integers With Signed Saturation",
    "psubusb": "Subtract Packed Unsigned Integers With Unsigned Saturation",
    "psubusw": "Subtract Packed Unsigned Integers With Unsigned Saturation",
    "psubw": "Subtract Packed Integers",
    "ptest": "Logical Compare",
    "ptwrite": "Write Data to a Processor Trace Packet",
    "punpckhbw": "Unpack High Data",
    "punpckhdq": "Unpack High Data",
    "punpckhqdq": "Unpack High Data",
    "punpckhwd": "Unpack High Data",
    "punpcklbw": "Unpack Low Data",
    "punpckldq": "Unpack Low Data",
    "punpcklqdq": "Unpack Low Data",
    "punpcklwd": "Unpack Low Data",
    "push": "Push Word, Doubleword, or Quadword Onto the Stack",
    "pusha": "Push All General-Purpose Registers",
    "pushad": "Push All General-Purpose Registers",
    "pushf": "Push EFLAGS Register Onto the Stack",
    "pushfd": "Push EFLAGS Register Onto the Stack",
    "pushfq": "Push EFLAGS Register Onto the Stack",
    "pxor": "Logical Exclusive OR",
    "rcl": "Rotate",
    "rcpps": "Compute Reciprocals of Packed Single Precision Floating-Point Values",
    "rcpss": "Compute Reciprocal of Scalar Single Precision Floating-Point Values",
    "rcr": "Rotate",
    "rdfsbase": "Read FS/GS Segment Base",
    "rdgsbase": "Read FS/GS Segment Base",
    "rdmsr": "Read From Model Specific Register",
    "rdpid": "Read Processor ID",
    "rdpkru": "Read Protection Key Rights for User Pages",
    "rdpmc": "Read Performance-Monitoring Counters",
    "rdrand": "Read Random Number",
    "rdseed": "Read Random SEED",
    "rdsspd": "Read Shadow Stack Pointer",
    "rdsspq": "Read Shadow Stack Pointer",
    "rdtsc": "Read Time-Stamp Counter",
    "rdtscp": "Read Time-Stamp Counter and Processor ID",
    "rep": "Repeat String Operation Prefix",
    "repe": "Repeat String Operation Prefix",
    "repne": "Repeat String Operation Prefix",
    "repnz": "Repeat String Operation Prefix",
    "repz": "Repeat String Operation Prefix",
    "ret": "Return From Procedure",
    "rol": "Rotate",
    "ror": "Rotate",
    "rorx": "Rotate Right Logical Without Affecting Flags",
    "roundpd": "Round Packed Double Precision Floating-Point Values",
    "roundps": "Round Packed Single Precision Floating-Point Values",
    "roundsd": "Round Scalar Double Precision Floating-Point Values",
    "roundss": "Round Scalar Single Precision Floating-Point Values",
    "rsm": "Resume From System Management Mode",
    "rsqrtps": "Compute Reciprocals of Square Roots of Packed Single Precision Floating-PointValues",
    "rsqrtss": "Compute Reciprocal of Square Root of Scalar Single Precision Floating-Point Value",
    "rstorssp": "Restore Saved Shadow Stack Pointer",
    "sahf": "Store AH Into Flags",
    "sal": "Shift",
    "sar": "Shift",
    "sarx": "Shift Without Affecting Flags",
    "saveprevssp": "Save Previous Shadow Stack Pointer",
    "sbb": "Integer Subtraction With Borrow",
    "scas": "Scan String",
    "scasb": "Scan String",
    "scasd": "Scan String",
    "scasw": "Scan String",
    "senduipi": "Send User Interprocessor Interrupt",
    "serialize": "Serialize Instruction Execution",
    "setssbsy": "Mark Shadow Stack Busy",
    "setcc": "Set Byte on Condition",
    "sfence": "Store Fence",
    "sgdt": "Store Global Descriptor Table Register",
    "sha1msg1": "Perform an Intermediate Calculation for the Next Four SHA1 Message Dwords",
    "sha1msg2": "Perform a Final Calculation for the Next Four SHA1 Message Dwords",
    "sha1nexte": "Calculate SHA1 State Variable E After Four Rounds",
    "sha1rnds4": "Perform Four Rounds of SHA1 Operation",
    "sha256msg1": "Perform an Intermediate Calculation for the Next Four SHA256 MessageDwords",
    "sha256msg2": "Perform a Final Calculation for the Next Four SHA256 Message Dwords",
    "sha256rnds2": "Perform Two Rounds of SHA256 Operation",
    "shl": "Shift",
    "shld": "Double Precision Shift Left",
    "shlx": "Shift Without Affecting Flags",
    "shr": "Shift",
    "shrd": "Double Precision Shift Right",
    "shrx": "Shift Without Affecting Flags",
    "shufpd": "Packed Interleave Shuffle of Pairs of Double Precision Floating-Point Values",
    "shufps": "Packed Interleave Shuffle of Quadruplets of Single Precision Floating-Point Values",
    "sidt": "Store Interrupt Descriptor Table Register",
    "sldt": "Store Local Descriptor Table Register",
    "smsw": "Store Machine Status Word",
    "sqrtpd": "Square Root of Double Precision Floating-Point Values",
    "sqrtps": "Square Root of Single Precision Floating-Point Values",
    "sqrtsd": "Compute Square Root of Scalar Double Precision Floating-Point Value",
    "sqrtss": "Compute Square Root of Scalar Single Precision Value",
    "stac": "Set AC Flag in EFLAGS Register",
    "stc": "Set Carry Flag",
    "std": "Set Direction Flag",
    "sti": "Set Interrupt Flag",
    "stmxcsr": "Store MXCSR Register State",
    "stos": "Store String",
    "stosb": "Store String",
    "stosd": "Store String",
    "stosq": "Store String",
    "stosw": "Store String",
    "str": "Store Task Register",
    "sttilecfg": "Store Tile Configuration",
    "stui": "Set User Interrupt Flag",
    "sub": "Subtract",
    "subpd": "Subtract Packed Double Precision Floating-Point Values",
    "subps": "Subtract Packed Single Precision Floating-Point Values",
    "subsd": "Subtract Scalar Double Precision Floating-Point Value",
    "subss": "Subtract Scalar Single Precision Floating-Point Value",
    "swapgs": "Swap GS Base Register",
    "syscall": "Fast System Call",
    "sysenter": "Fast System Call",
    "sysexit": "Fast Return from Fast System Call",
    "sysret": "Return From Fast System Call",
    "tdpbf16ps": "Dot Product of BF16 Tiles Accumulated into Packed Single Precision Tile",
    "tdpbssd": "Dot Product of Signed/Unsigned Bytes with DwordAccumulation",
    "tdpbsud": "Dot Product of Signed/Unsigned Bytes with DwordAccumulation",
    "tdpbusd": "Dot Product of Signed/Unsigned Bytes with DwordAccumulation",
    "tdpbuud": "Dot Product of Signed/Unsigned Bytes with DwordAccumulation",
    "test": "Logical Compare",
    "testui": "Determine User Interrupt Flag",
    "tileloadd": "Load Tile",
    "tileloaddt1": "Load Tile",
    "tilerelease": "Release Tile",
    "tilestored": "Store Tile",
    "tilezero": "Zero Tile",
    "tpause": "Timed PAUSE",
    "tzcnt": "Count the Number of Trailing Zero Bits",
    "ucomisd": "Unordered Compare Scalar Double Precision Floating-Point Values and Set EFLAGS",
    "ucomiss": "Unordered Compare Scalar Single Precision Floating-Point Values and Set EFLAGS",
    "ud": "Undefined Instruction",
    "uiret": "User-Interrupt Return",
    "umonitor": "User Level Set Up Monitor Address",
    "umwait": "User Level Monitor Wait",
    "unpckhpd": "Unpack and Interleave High Packed Double Precision Floating-Point Values",
    "unpckhps": "Unpack and Interleave High Packed Single Precision Floating-Point Values",
    "unpcklpd": "Unpack and Interleave Low Packed Double Precision Floating-Point Values",
    "unpcklps": "Unpack and Interleave Low Packed Single Precision Floating-Point Values",
    "vaddph": "Add Packed FP16 Values",
    "vaddsh": "Add Scalar FP16 Values",
    "valignd": "Align Doubleword/Quadword Vectors",
    "valignq": "Align Doubleword/Quadword Vectors",
    "vblendmpd": "Blend Float64/Float32 Vectors Using an OpMask Control",
    "vblendmps": "Blend Float64/Float32 Vectors Using an OpMask Control",
    "vbroadcast": "Load with Broadcast Floating-Point Data",
    "vcmpph": "Compare Packed FP16 Values",
    "vcmpsh": "Compare Scalar FP16 Values",
    "vcomish": "Compare Scalar Ordered FP16 Values and Set EFLAGS",
    "vcompresspd": "Store Sparse Packed Double Precision Floating-Point Values Into DenseMemory",
    "vcompressps": "Store Sparse Packed Single Precision Floating-Point Values Into Dense Memory",
    "vcompressw": "Store Sparse Packed Byte/Word Integer Values Into DenseMemory/Register",
    "vcvtdq2ph": "Convert Packed Signed Doubleword Integers to Packed FP16 Values",
    "vcvtne2ps2bf16": "Convert Two Packed Single Data to One Packed BF16 Data",
    "vcvtneps2bf16": "Convert Packed Single Data to Packed BF16 Data",
    "vcvtpd2ph": "Convert Packed Double Precision FP Values to Packed FP16 Values",
    "vcvtpd2qq": "Convert Packed Double Precision Floating-Point Values to Packed QuadwordIntegers",
    "vcvtpd2udq": "Convert Packed Double Precision Floating-Point Values to Packed UnsignedDoubleword Integers",
    "vcvtpd2uqq": "Convert Packed Double Precision Floating-Point Values to Packed UnsignedQuadword Integers",
    "vcvtph2dq": "Convert Packed FP16 Values to Signed Doubleword Integers",
    "vcvtph2pd": "Convert Packed FP16 Values to FP64 Values",
    "vcvtph2ps": "Convert Packed FP16 Values to Single Precision Floating-PointValues",
    "vcvtph2psx": "Convert Packed FP16 Values to Single Precision Floating-PointValues",
    "vcvtph2qq": "Convert Packed FP16 Values to Signed Quadword Integer Values",
    "vcvtph2udq": "Convert Packed FP16 Values to Unsigned Doubleword Integers",
    "vcvtph2uqq": "Convert Packed FP16 Values to Unsigned Quadword Integers",
    "vcvtph2uw": "Convert Packed FP16 Values to Unsigned Word Integers",
    "vcvtph2w": "Convert Packed FP16 Values to Signed Word Integers",
    "vcvtps2ph": "Convert Single-Precision FP Value to 16-bit FP Value",
    "vcvtps2phx": "Convert Packed Single Precision Floating-Point Values to Packed FP16 Values",
    "vcvtps2qq": "Convert Packed Single Precision Floating-Point Values to Packed SignedQuadword Integer Values",
    "vcvtps2udq": "Convert Packed Single Precision Floating-Point Values to Packed UnsignedDoubleword Integer Values",
    "vcvtps2uqq": "Convert Packed Single Precision Floating-Point Values to Packed UnsignedQuadword Integer Values",
    "vcvtqq2pd": "Convert Packed Quadword Integers to Packed Double Precision Floating-PointValues",
    "vcvtqq2ph": "Convert Packed Signed Quadword Integers to Packed FP16 Values",
    "vcvtqq2ps": "Convert Packed Quadword Integers to Packed Single Precision Floating-PointValues",
    "vcvtsd2sh": "Convert Low FP64 Value to an FP16 Value",
    "vcvtsd2usi": "Convert Scalar Double Precision Floating-Point Value to Unsigned DoublewordInteger",
    "vcvtsh2sd": "Convert Low FP16 Value to an FP64 Value",
    "vcvtsh2si": "Convert Low FP16 Value to Signed Integer",
    "vcvtsh2ss": "Convert Low FP16 Value to FP32 Value",
    "vcvtsh2usi": "Convert Low FP16 Value to Unsigned Integer",
    "vcvtsi2sh": "Convert a Signed Doubleword/Quadword Integer to an FP16 Value",
    "vcvtss2sh": "Convert Low FP32 Value to an FP16 Value",
    "vcvtss2usi": "Convert Scalar Single Precision Floating-Point Value to Unsigned DoublewordInteger",
    "vcvttpd2qq": "Convert With Truncation Packed Double Precision Floating-Point Values toPacked Quadword Integers",
    "vcvttpd2udq": "Convert With Truncation Packed Double Precision Floating-Point Values toPacked Unsigned Doubleword Integers",
    "vcvttpd2uqq": "Convert With Truncation Packed Double Precision Floating-Point Values toPacked Unsigned Quadword Integers",
    "vcvttph2dq": "Convert with Truncation Packed FP16 Values to Signed Doubleword Integers",
    "vcvttph2qq": "Convert with Truncation Packed FP16 Values to Signed Quadword Integers",
    "vcvttph2udq": "Convert with Truncation Packed FP16 Values to Unsigned DoublewordIntegers",
    "vcvttph2uqq": "Convert with Truncation Packed FP16 Values to Unsigned Quadword Integers",
    "vcvttph2uw": "Convert Packed FP16 Values to Unsigned Word Integers",
    "vcvttph2w": "Convert Packed FP16 Values to Signed Word Integers",
    "vcvttps2qq": "Convert With Truncation Packed Single Precision Floating-Point Values toPacked Signed Quadword Integer Values",
    "vcvttps2udq": "Convert With Truncation Packed Single Precision Floating-Point Values toPacked Unsigned Doubleword Integer Values",
    "vcvttps2uqq": "Convert With Truncation Packed Single Precision Floating-Point Values toPacked Unsigned Quadword Integer Values",
    "vcvttsd2usi": "Convert With Truncation Scalar Double Precision Floating-Point Value toUnsigned Integer",
    "vcvttsh2si": "Convert with Truncation Low FP16 Value to a Signed Integer",
    "vcvttsh2usi": "Convert with Truncation Low FP16 Value to an Unsigned Integer",
    "vcvttss2usi": "Convert With Truncation Scalar Single Precision Floating-Point Value toUnsigned Integer",
    "vcvtudq2pd": "Convert Packed Unsigned Doubleword Integers to Packed Double PrecisionFloating-Point Values",
    "vcvtudq2ph": "Convert Packed Unsigned Doubleword Integers to Packed FP16 Values",
    "vcvtudq2ps": "Convert Packed Unsigned Doubleword Integers to Packed Single PrecisionFloating-Point Values",
    "vcvtuqq2pd": "Convert Packed Unsigned Quadword Integers to Packed Double PrecisionFloating-Point Values",
    "vcvtuqq2ph": "Convert Packed Unsigned Quadword Integers to Packed FP16 Values",
    "vcvtuqq2ps": "Convert Packed Unsigned Quadword Integers to Packed Single PrecisionFloating-Point Values",
    "vcvtusi2sd": "Convert Unsigned Integer to Scalar Double Precision Floating-Point Value",
    "vcvtusi2sh": "Convert Unsigned Doubleword Integer to an FP16 Value",
    "vcvtusi2ss": "Convert Unsigned Integer to Scalar Single Precision Floating-Point Value",
    "vcvtuw2ph": "Convert Packed Unsigned Word Integers to FP16 Values",
    "vcvtw2ph": "Convert Packed Signed Word Integers to FP16 Values",
    "vdbpsadbw": "Double Block Packed Sum-Absolute-Differences (SAD) on Unsigned Bytes",
    "vdivph": "Divide Packed FP16 Values",
    "vdivsh": "Divide Scalar FP16 Values",
    "vdpbf16ps": "Dot Product of BF16 Pairs Accumulated Into Packed Single Precision",
    "verr": "Verify a Segment for Reading or Writing",
    "verw": "Verify a Segment for Reading or Writing",
    "vexpandpd": "Load Sparse Packed Double Precision Floating-Point Values From Dense Memory",
    "vexpandps": "Load Sparse Packed Single Precision Floating-Point Values From Dense Memory",
    "vextractf128": "Extract Packed Floating-Point Values",
    "vextractf32x4": "Extract Packed Floating-Point Values",
    "vextractf32x8": "Extract Packed Floating-Point Values",
    "vextractf64x2": "Extract Packed Floating-Point Values",
    "vextractf64x4": "Extract Packed Floating-Point Values",
    "vextracti128": "ExtractPacked Integer Values",
    "vextracti32x4": "ExtractPacked Integer Values",
    "vextracti32x8": "ExtractPacked Integer Values",
    "vextracti64x2": "ExtractPacked Integer Values",
    "vextracti64x4": "ExtractPacked Integer Values",
    "vfcmaddcph": "Complex Multiply and Accumulate FP16 Values",
    "vfcmaddcsh": "Complex Multiply and Accumulate Scalar FP16 Values",
    "vfcmulcph": "Complex Multiply FP16 Values",
    "vfcmulcsh": "Complex Multiply Scalar FP16 Values",
    "vfixupimmpd": "Fix Up Special Packed Float64 Values",
    "vfixupimmps": "Fix Up Special Packed Float32 Values",
    "vfixupimmsd": "Fix Up Special Scalar Float64 Value",
    "vfixupimmss": "Fix Up Special Scalar Float32 Value",
    "vfmadd132pd": "Fused Multiply-Add of Packed DoublePrecision Floating-Point Values",
    "vfmadd132ph": "Fused Multiply-Add of Packed FP16 Values",
    "vfmadd132ps": "Fused Multiply-Add of Packed SinglePrecision Floating-Point Values",
    "vfmadd132sd": "Fused Multiply-Add of Scalar DoublePrecision Floating-Point Values",
    "vfmadd132sh": "Fused Multiply-Add of Scalar FP16 Values",
    "vfmadd132ss": "Fused Multiply-Add of Scalar Single PrecisionFloating-Point Values",
    "vfmadd213pd": "Fused Multiply-Add of Packed DoublePrecision Floating-Point Values",
    "vfmadd213ph": "Fused Multiply-Add of Packed FP16 Values",
    "vfmadd213ps": "Fused Multiply-Add of Packed SinglePrecision Floating-Point Values",
    "vfmadd213sd": "Fused Multiply-Add of Scalar DoublePrecision Floating-Point Values",
    "vfmadd213sh": "Fused Multiply-Add of Scalar FP16 Values",
    "vfmadd213ss": "Fused Multiply-Add of Scalar Single PrecisionFloating-Point Values",
    "vfmadd231pd": "Fused Multiply-Add of Packed DoublePrecision Floating-Point Values",
    "vfmadd231ph": "Fused Multiply-Add of Packed FP16 Values",
    "vfmadd231ps": "Fused Multiply-Add of Packed SinglePrecision Floating-Point Values",
    "vfmadd231sd": "Fused Multiply-Add of Scalar DoublePrecision Floating-Point Values",
    "vfmadd231sh": "Fused Multiply-Add of Scalar FP16 Values",
    "vfmadd231ss": "Fused Multiply-Add of Scalar Single PrecisionFloating-Point Values",
    "vfmaddcph": "Complex Multiply and Accumulate FP16 Values",
    "vfmaddcsh": "Complex Multiply and Accumulate Scalar FP16 Values",
    "vfmaddsub132pd": "Fused Multiply-AlternatingAdd/Subtract of Packed Double Precision Floating-Point Values",
    "vfmaddsub132ph": "Fused Multiply-AlternatingAdd/Subtract of Packed FP16 Values",
    "vfmaddsub132ps": "Fused Multiply-AlternatingAdd/Subtract of Packed Single Precision Floating-Point Values",
    "vfmaddsub213pd": "Fused Multiply-AlternatingAdd/Subtract of Packed Double Precision Floating-Point Values",
    "vfmaddsub213ph": "Fused Multiply-AlternatingAdd/Subtract of Packed FP16 Values",
    "vfmaddsub213ps": "Fused Multiply-AlternatingAdd/Subtract of Packed Single Precision Floating-Point Values",
    "vfmaddsub231pd": "Fused Multiply-AlternatingAdd/Subtract of Packed Double Precision Floating-Point Values",
    "vfmaddsub231ph": "Fused Multiply-AlternatingAdd/Subtract of Packed FP16 Values",
    "vfmaddsub231ps": "Fused Multiply-AlternatingAdd/Subtract of Packed Single Precision Floating-Point Values",
    "vfmsub132pd": "Fused Multiply-Subtract of Packed DoublePrecision Floating-Point Values",
    "vfmsub132ph": "Fused Multiply-Subtract of Packed FP16 Values",
    "vfmsub132ps": "Fused Multiply-Subtract of Packed SinglePrecision Floating-Point Values",
    "vfmsub132sd": "Fused Multiply-Subtract of Scalar DoublePrecision Floating-Point Values",
    "vfmsub132sh": "Fused Multiply-Subtract of Scalar FP16 Values",
    "vfmsub132ss": "Fused Multiply-Subtract of Scalar SinglePrecision Floating-Point Values",
    "vfmsub213pd": "Fused Multiply-Subtract of Packed DoublePrecision Floating-Point Values",
    "vfmsub213ph": "Fused Multiply-Subtract of Packed FP16 Values",
    "vfmsub213ps": "Fused Multiply-Subtract of Packed SinglePrecision Floating-Point Values",
    "vfmsub213sd": "Fused Multiply-Subtract of Scalar DoublePrecision Floating-Point Values",
    "vfmsub213sh": "Fused Multiply-Subtract of Scalar FP16 Values",
    "vfmsub213ss": "Fused Multiply-Subtract of Scalar SinglePrecision Floating-Point Values",
    "vfmsub231pd": "Fused Multiply-Subtract of Packed DoublePrecision Floating-Point Values",
    "vfmsub231ph": "Fused Multiply-Subtract of Packed FP16 Values",
    "vfmsub231ps": "Fused Multiply-Subtract of Packed SinglePrecision Floating-Point Values",
    "vfmsub231sd": "Fused Multiply-Subtract of Scalar DoublePrecision Floating-Point Values",
    "vfmsub231sh": "Fused Multiply-Subtract of Scalar FP16 Values",
    "vfmsub231ss": "Fused Multiply-Subtract of Scalar SinglePrecision Floating-Point Values",
    "vfmsubadd132pd": "Fused Multiply-AlternatingSubtract/Add of Packed Double Precision Floating-Point Values",
    "vfmsubadd132ph": "Fused Multiply-AlternatingSubtract/Add of Packed FP16 Values",
    "vfmsubadd132ps": "Fused Multiply-AlternatingSubtract/Add of Packed Single Precision Floating-Point Values",
    "vfmsubadd213pd": "Fused Multiply-AlternatingSubtract/Add of Packed Double Precision Floating-Point Values",
    "vfmsubadd213ph": "Fused Multiply-AlternatingSubtract/Add of Packed FP16 Values",
    "vfmsubadd213ps": "Fused Multiply-AlternatingSubtract/Add of Packed Single Precision Floating-Point Values",
    "vfmsubadd231pd": "Fused Multiply-AlternatingSubtract/Add of Packed Double Precision Floating-Point Values",
    "vfmsubadd231ph": "Fused Multiply-AlternatingSubtract/Add of Packed FP16 Values",
    "vfmsubadd231ps": "Fused Multiply-AlternatingSubtract/Add of Packed Single Precision Floating-Point Values",
    "vfmulcph": "Complex Multiply FP16 Values",
    "vfmulcsh": "Complex Multiply Scalar FP16 Values",
    "vfnmadd132pd": "Fused Negative Multiply-Add of PackedDouble Precision Floating-Point Values",
    "vfnmadd132ph": "Fused Multiply-Add of Packed FP16 Values",
    "vfnmadd132ps": "Fused Negative Multiply-Add of PackedSingle Precision Floating-Point Values",
    "vfnmadd132sd": "Fused Negative Multiply-Add of ScalarDouble Precision Floating-Point Values",
    "vfnmadd132sh": "Fused Multiply-Add of Scalar FP16 Values",
    "vfnmadd132ss": "Fused Negative Multiply-Add of ScalarSingle Precision Floating-Point Values",
    "vfnmadd213pd": "Fused Negative Multiply-Add of PackedDouble Precision Floating-Point Values",
    "vfnmadd213ph": "Fused Multiply-Add of Packed FP16 Values",
    "vfnmadd213ps": "Fused Negative Multiply-Add of PackedSingle Precision Floating-Point Values",
    "vfnmadd213sd": "Fused Negative Multiply-Add of ScalarDouble Precision Floating-Point Values",
    "vfnmadd213sh": "Fused Multiply-Add of Scalar FP16 Values",
    "vfnmadd213ss": "Fused Negative Multiply-Add of ScalarSingle Precision Floating-Point Values",
    "vfnmadd231pd": "Fused Negative Multiply-Add of PackedDouble Precision Floating-Point Values",
    "vfnmadd231ph": "Fused Multiply-Add of Packed FP16 Values",
    "vfnmadd231ps": "Fused Negative Multiply-Add of PackedSingle Precision Floating-Point Values",
    "vfnmadd231sd": "Fused Negative Multiply-Add of ScalarDouble Precision Floating-Point Values",
    "vfnmadd231sh": "Fused Multiply-Add of Scalar FP16 Values",
    "vfnmadd231ss": "Fused Negative Multiply-Add of ScalarSingle Precision Floating-Point Values",
    "vfnmsub132pd": "Fused Negative Multiply-Subtract ofPacked Double Precision Floating-Point Values",
    "vfnmsub132ph": "Fused Multiply-Subtract of Packed FP16 Values",
    "vfnmsub132ps": "Fused Negative Multiply-Subtract ofPacked Single Precision Floating-Point Values",
    "vfnmsub132sd": "Fused Negative Multiply-Subtract ofScalar Double Precision Floating-Point Values",
    "vfnmsub132sh": "Fused Multiply-Subtract of Scalar FP16 Values",
    "vfnmsub132ss": "Fused Negative Multiply-Subtract ofScalar Single Precision Floating-Point Values",
    "vfnmsub213pd": "Fused Negative Multiply-Subtract ofPacked Double Precision Floating-Point Values",
    "vfnmsub213ph": "Fused Multiply-Subtract of Packed FP16 Values",
    "vfnmsub213ps": "Fused Negative Multiply-Subtract ofPacked Single Precision Floating-Point Values",
    "vfnmsub213sd": "Fused Negative Multiply-Subtract ofScalar Double Precision Floating-Point Values",
    "vfnmsub213sh": "Fused Multiply-Subtract of Scalar FP16 Values",
    "vfnmsub213ss": "Fused Negative Multiply-Subtract ofScalar Single Precision Floating-Point Values",
    "vfnmsub231pd": "Fused Negative Multiply-Subtract ofPacked Double Precision Floating-Point Values",
    "vfnmsub231ph": "Fused Multiply-Subtract of Packed FP16 Values",
    "vfnmsub231ps": "Fused Negative Multiply-Subtract ofPacked Single Precision Floating-Point Values",
    "vfnmsub231sd": "Fused Negative Multiply-Subtract ofScalar Double Precision Floating-Point Values",
    "vfnmsub231sh": "Fused Multiply-Subtract of Scalar FP16 Values",
    "vfnmsub231ss": "Fused Negative Multiply-Subtract ofScalar Single Precision Floating-Point Values",
    "vfpclasspd": "Tests Types of Packed Float64 Values",
    "vfpclassph": "Test Types of Packed FP16 Values",
    "vfpclassps": "Tests Types of Packed Float32 Values",
    "vfpclasssd": "Tests Type of a Scalar Float64 Value",
    "vfpclasssh": "Test Types of Scalar FP16 Values",
    "vfpclassss": "Tests Type of a Scalar Float32 Value",
    "vgatherdpd": "Gather Packed Double Precision Floating-Point Values UsingSigned Dword/Qword Indices",
    "vgatherdpd ": "Gather Packed Single, Packed Double with Signed Dword Indices",
    "vgatherdps": "Gather Packed Single Precision Floating-Point Values UsingSigned Dword/Qword Indices",
    "vgatherdps ": "Gather Packed Single, Packed Double with Signed Dword Indices",
    "vgatherqpd": "Gather Packed Double Precision Floating-Point Values UsingSigned Dword/Qword Indices",
    "vgatherqpd ": "Gather Packed Single, Packed Double with Signed Qword Indices",
    "vgatherqps": "Gather Packed Single Precision Floating-Point Values UsingSigned Dword/Qword Indices",
    "vgatherqps ": "Gather Packed Single, Packed Double with Signed Qword Indices",
    "vgetexppd": "Convert Exponents of Packed Double Precision Floating-Point Values to DoublePrecision Floating-Point Values",
    "vgetexpph": "Convert Exponents of Packed FP16 Values to FP16 Values",
    "vgetexpps": "Convert Exponents of Packed Single Precision Floating-Point Values to SinglePrecision Floating-Point Values",
    "vgetexpsd": "Convert Exponents of Scalar Double Precision Floating-Point Value to DoublePrecision Floating-Point Value",
    "vgetexpsh": "Convert Exponents of Scalar FP16 Values to FP16 Values",
    "vgetexpss": "Convert Exponents of Scalar Single Precision Floating-Point Value to SinglePrecision Floating-Point Value",
    "vgetmantpd": "Extract Float64 Vector of Normalized Mantissas From Float64 Vector",
    "vgetmantph": "Extract FP16 Vector of Normalized Mantissas from FP16 Vector",
    "vgetmantps": "Extract Float32 Vector of Normalized Mantissas From Float32 Vector",
    "vgetmantsd": "Extract Float64 of Normalized Mantissas From Float64 Scalar",
    "vgetmantsh": "Extract FP16 of Normalized Mantissa from FP16 Scalar",
    "vgetmantss": "Extract Float32 Vector of Normalized Mantissa From Float32 Vector",
    "vinsertf128": "Insert PackedFloating-Point Values",
    "vinsertf32x4": "Insert PackedFloating-Point Values",
    "vinsertf32x8": "Insert PackedFloating-Point Values",
    "vinsertf64x2": "Insert PackedFloating-Point Values",
    "vinsertf64x4": "Insert PackedFloating-Point Values",
    "vinserti128": "Insert PackedInteger Values",
    "vinserti32x4": "Insert PackedInteger Values",
    "vinserti32x8": "Insert PackedInteger Values",
    "vinserti64x2": "Insert PackedInteger Values",
    "vinserti64x4": "Insert PackedInteger Values",
    "vmaskmov": "Conditional SIMD Packed Loads and Stores",
    "vmaxph": "Return Maximum of Packed FP16 Values",
    "vmaxsh": "Return Maximum of Scalar FP16 Values",
    "vminph": "Return Minimum of Packed FP16 Values",
    "vminsh": "Return Minimum Scalar FP16 Value",
    "vmovdqa": "Move Aligned Packed Integer Values",
    "vmovdqa": "Move Aligned Packed Integer Values",
    "vmovdqu": "Move Unaligned Packed Integer Values",
    "vmovdqu": "Move Unaligned Packed Integer Values",
    "vmovdqu": "Move Unaligned Packed Integer Values",
    "vmovdqu": "Move Unaligned Packed Integer Values",
    "vmovsh": "Move Scalar FP16 Value",
    "vmovw": "Move Word",
    "vmulph": "Multiply Packed FP16 Values",
    "vmulsh": "Multiply Scalar FP16 Values",
    "vp2intersectd": "Compute Intersection Between DWORDS/QUADWORDS to aPair of Mask Registers",
    "vp2intersectq": "Compute Intersection Between DWORDS/QUADWORDS to aPair of Mask Registers",
    "vpblendd": "Blend Packed Dwords",
    "vpblendmb": "Blend Byte/Word Vectors Using an Opmask Control",
    "vpblendmd": "Blend Int32/Int64 Vectors Using an OpMask Control",
    "vpblendmq": "Blend Int32/Int64 Vectors Using an OpMask Control",
    "vpblendmw": "Blend Byte/Word Vectors Using an Opmask Control",
    "vpbroadcast": "Load Integer and Broadcast",
    "vpbroadcastb": "Load With Broadcast Integer Data From General Purpose Register",
    "vpbroadcastd": "Load With Broadcast Integer Data From General Purpose Register",
    "vpbroadcastm": "Broadcast Mask to Vector Register",
    "vpbroadcastq": "Load With Broadcast Integer Data From General Purpose Register",
    "vpbroadcastw": "Load With Broadcast Integer Data From General Purpose Register",
    "vpcmpb": "Compare Packed Byte Values Into Mask",
    "vpcmpd": "Compare Packed Integer Values Into Mask",
    "vpcmpq": "Compare Packed Integer Values Into Mask",
    "vpcmpub": "Compare Packed Byte Values Into Mask",
    "vpcmpud": "Compare Packed Integer Values Into Mask",
    "vpcmpuq": "Compare Packed Integer Values Into Mask",
    "vpcmpuw": "Compare Packed Word Values Into Mask",
    "vpcmpw": "Compare Packed Word Values Into Mask",
    "vpcompressb": "Store Sparse Packed Byte/Word Integer Values Into DenseMemory/Register",
    "vpcompressd": "Store Sparse Packed Doubleword Integer Values Into Dense Memory/Register",
    "vpcompressq": "Store Sparse Packed Quadword Integer Values Into Dense Memory/Register",
    "vpconflictd": "Detect Conflicts Within a Vector of Packed Dword/Qword Values Into DenseMemory/ Register",
    "vpconflictq": "Detect Conflicts Within a Vector of Packed Dword/Qword Values Into DenseMemory/ Register",
    "vpdpbusd": "Multiply and Add Unsigned and Signed Bytes",
    "vpdpbusds": "Multiply and Add Unsigned and Signed Bytes With Saturation",
    "vpdpwssd": "Multiply and Add Signed Word Integers",
    "vpdpwssds": "Multiply and Add Signed Word Integers With Saturation",
    "vperm2f128": "Permute Floating-Point Values",
    "vperm2i128": "Permute Integer Values",
    "vpermb": "Permute Packed Bytes Elements",
    "vpermd": "Permute Packed Doubleword/Word Elements",
    "vpermi2b": "Full Permute of Bytes From Two Tables Overwriting the Index",
    "vpermi2d": "Full Permute From Two Tables Overwriting the Index",
    "vpermi2pd": "Full Permute From Two Tables Overwriting the Index",
    "vpermi2ps": "Full Permute From Two Tables Overwriting the Index",
    "vpermi2q": "Full Permute From Two Tables Overwriting the Index",
    "vpermi2w": "Full Permute From Two Tables Overwriting the Index",
    "vpermilpd": "Permute In-Lane of Pairs of Double Precision Floating-Point Values",
    "vpermilps": "Permute In-Lane of Quadruples of Single Precision Floating-Point Values",
    "vpermpd": "Permute Double Precision Floating-Point Elements",
    "vpermps": "Permute Single Precision Floating-Point Elements",
    "vpermq": "Qwords Element Permutation",
    "vpermt2b": "Full Permute of Bytes From Two Tables Overwriting a Table",
    "vpermt2d": "Full Permute From Two Tables Overwriting One Table",
    "vpermt2pd": "Full Permute From Two Tables Overwriting One Table",
    "vpermt2ps": "Full Permute From Two Tables Overwriting One Table",
    "vpermt2q": "Full Permute From Two Tables Overwriting One Table",
    "vpermt2w": "Full Permute From Two Tables Overwriting One Table",
    "vpermw": "Permute Packed Doubleword/Word Elements",
    "vpexpandb": "Expand Byte/Word Values",
    "vpexpandd": "Load Sparse Packed Doubleword Integer Values From Dense Memory/Register",
    "vpexpandq": "Load Sparse Packed Quadword Integer Values From Dense Memory/Register",
    "vpexpandw": "Expand Byte/Word Values",
    "vpgatherdd": "Gather Packed Dword Values Using Signed Dword/Qword Indices",
    "vpgatherdd ": "Gather Packed Dword, Packed Qword With Signed Dword Indices",
    "vpgatherdq": "Gather Packed Dword, Packed Qword With Signed Dword Indices",
    "vpgatherdq ": "Gather Packed Qword Values Using Signed Dword/Qword Indices",
    "vpgatherqd": "Gather Packed Dword Values Using Signed Dword/Qword Indices",
    "vpgatherqd ": "Gather Packed Dword, Packed Qword with Signed Qword Indices",
    "vpgatherqq": "Gather Packed Qword Values Using Signed Dword/Qword Indices",
    "vpgatherqq ": "Gather Packed Dword, Packed Qword with Signed Qword Indices",
    "vplzcntd": "Count the Number of Leading Zero Bits for Packed Dword, Packed Qword Values",
    "vplzcntq": "Count the Number of Leading Zero Bits for Packed Dword, Packed Qword Values",
    "vpmadd52huq": "Packed Multiply of Unsigned 52-Bit Unsigned Integers and Add High 52-BitProducts to 64-Bit Accumulators",
    "vpmadd52luq": "Packed Multiply of Unsigned 52-Bit Integers and Add the Low 52-Bit Productsto Qword Accumulators",
    "vpmaskmov": "Conditional SIMD Integer Packed Loads and Stores",
    "vpmovb2m": "Convert a Vector Register to a Mask",
    "vpmovd2m": "Convert a Vector Register to a Mask",
    "vpmovdb": "Down Convert DWord to Byte",
    "vpmovdw": "Down Convert DWord to Word",
    "vpmovm2b": "Convert a Mask Register to a VectorRegister",
    "vpmovm2d": "Convert a Mask Register to a VectorRegister",
    "vpmovm2q": "Convert a Mask Register to a VectorRegister",
    "vpmovm2w": "Convert a Mask Register to a VectorRegister",
    "vpmovq2m": "Convert a Vector Register to a Mask",
    "vpmovqb": "Down Convert QWord to Byte",
    "vpmovqd": "Down Convert QWord to DWord",
    "vpmovqw": "Down Convert QWord to Word",
    "vpmovsdb": "Down Convert DWord to Byte",
    "vpmovsdw": "Down Convert DWord to Word",
    "vpmovsqb": "Down Convert QWord to Byte",
    "vpmovsqd": "Down Convert QWord to DWord",
    "vpmovsqw": "Down Convert QWord to Word",
    "vpmovswb": "Down Convert Word to Byte",
    "vpmovusdb": "Down Convert DWord to Byte",
    "vpmovusdw": "Down Convert DWord to Word",
    "vpmovusqb": "Down Convert QWord to Byte",
    "vpmovusqd": "Down Convert QWord to DWord",
    "vpmovusqw": "Down Convert QWord to Word",
    "vpmovuswb": "Down Convert Word to Byte",
    "vpmovw2m": "Convert a Vector Register to a Mask",
    "vpmovwb": "Down Convert Word to Byte",
    "vpmultishiftqb": "Select Packed Unaligned Bytes From Quadword Sources",
    "vpopcnt": "Return the Count of Number of Bits Set to 1 in BYTE/WORD/DWORD/QWORD",
    "vprold": "Bit Rotate Left",
    "vprolq": "Bit Rotate Left",
    "vprolvd": "Bit Rotate Left",
    "vprolvq": "Bit Rotate Left",
    "vprord": "Bit Rotate Right",
    "vprorq": "Bit Rotate Right",
    "vprorvd": "Bit Rotate Right",
    "vprorvq": "Bit Rotate Right",
    "vpscatterdd": "Scatter Packed Dword, PackedQword with Signed Dword, Signed Qword Indices",
    "vpscatterdq": "Scatter Packed Dword, PackedQword with Signed Dword, Signed Qword Indices",
    "vpscatterqd": "Scatter Packed Dword, PackedQword with Signed Dword, Signed Qword Indices",
    "vpscatterqq": "Scatter Packed Dword, PackedQword with Signed Dword, Signed Qword Indices",
    "vpshld": "Concatenate and Shift Packed Data Left Logical",
    "vpshldv": "Concatenate and Variable Shift Packed Data Left Logical",
    "vpshrd": "Concatenate and Shift Packed Data Right Logical",
    "vpshrdv": "Concatenate and Variable Shift Packed Data Right Logical",
    "vpshufbitqmb": "Shuffle Bits From Quadword Elements Using Byte Indexes Into Mask",
    "vpsllvd": "Variable Bit Shift Left Logical",
    "vpsllvq": "Variable Bit Shift Left Logical",
    "vpsllvw": "Variable Bit Shift Left Logical",
    "vpsravd": "Variable Bit Shift Right Arithmetic",
    "vpsravq": "Variable Bit Shift Right Arithmetic",
    "vpsravw": "Variable Bit Shift Right Arithmetic",
    "vpsrlvd": "Variable Bit Shift Right Logical",
    "vpsrlvq": "Variable Bit Shift Right Logical",
    "vpsrlvw": "Variable Bit Shift Right Logical",
    "vpternlogd": "Bitwise Ternary Logic",
    "vpternlogq": "Bitwise Ternary Logic",
    "vptestmb": "Logical AND and Set Mask",
    "vptestmd": "Logical AND and Set Mask",
    "vptestmq": "Logical AND and Set Mask",
    "vptestmw": "Logical AND and Set Mask",
    "vptestnmb": "Logical NAND and Set",
    "vptestnmd": "Logical NAND and Set",
    "vptestnmq": "Logical NAND and Set",
    "vptestnmw": "Logical NAND and Set",
    "vrangepd": "Range Restriction Calculation for Packed Pairs of Float64 Values",
    "vrangeps": "Range Restriction Calculation for Packed Pairs of Float32 Values",
    "vrangesd": "Range Restriction Calculation From a Pair of Scalar Float64 Values",
    "vrangess": "Range Restriction Calculation From a Pair of Scalar Float32 Values",
    "vrcp14pd": "Compute Approximate Reciprocals of Packed Float64 Values",
    "vrcp14ps": "Compute Approximate Reciprocals of Packed Float32 Values",
    "vrcp14sd": "Compute Approximate Reciprocal of Scalar Float64 Value",
    "vrcp14ss": "Compute Approximate Reciprocal of Scalar Float32 Value",
    "vrcpph": "Compute Reciprocals of Packed FP16 Values",
    "vrcpsh": "Compute Reciprocal of Scalar FP16 Value",
    "vreducepd": "Perform Reduction Transformation on Packed Float64 Values",
    "vreduceph": "Perform Reduction Transformation on Packed FP16 Values",
    "vreduceps": "Perform Reduction Transformation on Packed Float32 Values",
    "vreducesd": "Perform a Reduction Transformation on a Scalar Float64 Value",
    "vreducesh": "Perform Reduction Transformation on Scalar FP16 Value",
    "vreducess": "Perform a Reduction Transformation on a Scalar Float32 Value",
    "vrndscalepd": "Round Packed Float64 Values to Include a Given Number of Fraction Bits",
    "vrndscaleph": "Round Packed FP16 Values to Include a Given Number of Fraction Bits",
    "vrndscaleps": "Round Packed Float32 Values to Include a Given Number of Fraction Bits",
    "vrndscalesd": "Round Scalar Float64 Value to Include a Given Number of Fraction Bits",
    "vrndscalesh": "Round Scalar FP16 Value to Include a Given Number of Fraction Bits",
    "vrndscaless": "Round Scalar Float32 Value to Include a Given Number of Fraction Bits",
    "vrsqrt14pd": "Compute Approximate Reciprocals of Square Roots of Packed Float64 Values",
    "vrsqrt14ps": "Compute Approximate Reciprocals of Square Roots of Packed Float32 Values",
    "vrsqrt14sd": "Compute Approximate Reciprocal of Square Root of Scalar Float64 Value",
    "vrsqrt14ss": "Compute Approximate Reciprocal of Square Root of Scalar Float32 Value",
    "vrsqrtph": "Compute Reciprocals of Square Roots of Packed FP16 Values",
    "vrsqrtsh": "Compute Approximate Reciprocal of Square Root of Scalar FP16 Value",
    "vscalefpd": "Scale Packed Float64 Values With Float64 Values",
    "vscalefph": "Scale Packed FP16 Values with FP16 Values",
    "vscalefps": "Scale Packed Float32 Values With Float32 Values",
    "vscalefsd": "Scale Scalar Float64 Values With Float64 Values",
    "vscalefsh": "Scale Scalar FP16 Values with FP16 Values",
    "vscalefss": "Scale Scalar Float32 Value With Float32 Value",
    "vscatterdpd": "Scatter Packed Single, PackedDouble with Signed Dword and Qword Indices",
    "vscatterdps": "Scatter Packed Single, PackedDouble with Signed Dword and Qword Indices",
    "vscatterqpd": "Scatter Packed Single, PackedDouble with Signed Dword and Qword Indices",
    "vscatterqps": "Scatter Packed Single, PackedDouble with Signed Dword and Qword Indices",
    "vshuff32x4": "Shuffle Packed Values at 128-BitGranularity",
    "vshuff64x2": "Shuffle Packed Values at 128-BitGranularity",
    "vshufi32x4": "Shuffle Packed Values at 128-BitGranularity",
    "vshufi64x2": "Shuffle Packed Values at 128-BitGranularity",
    "vsqrtph": "Compute Square Root of Packed FP16 Values",
    "vsqrtsh": "Compute Square Root of Scalar FP16 Value",
    "vsubph": "Subtract Packed FP16 Values",
    "vsubsh": "Subtract Scalar FP16 Value",
    "vtestpd": "Packed Bit Test",
    "vtestps": "Packed Bit Test",
    "vucomish": "Unordered Compare Scalar FP16 Values and Set EFLAGS",
    "vzeroall": "Zero XMM, YMM, and ZMM Registers",
    "vzeroupper": "Zero Upper Bits of YMM and ZMM Registers",
    "wait": "Wait",
    "wbinvd": "Write Back and Invalidate Cache",
    "wbnoinvd": "Write Back and Do Not Invalidate Cache",
    "wrfsbase": "Write FS/GS Segment Base",
    "wrgsbase": "Write FS/GS Segment Base",
    "wrmsr": "Write to Model Specific Register",
    "wrpkru": "Write Data to User Page Key Register",
    "wrssd": "Write to Shadow Stack",
    "wrssq": "Write to Shadow Stack",
    "wrussd": "Write to User Shadow Stack",
    "wrussq": "Write to User Shadow Stack",
    "xabort": "Transactional Abort",
    "xacquire": "Hardware Lock Elision Prefix Hints",
    "xadd": "Exchange and Add",
    "xbegin": "Transactional Begin",
    "xchg": "Exchange Register/Memory With Register",
    "xend": "Transactional End",
    "xgetbv": "Get Value of Extended Control Register",
    "xlat": "Table Look-up Translation",
    "xlatb": "Table Look-up Translation",
    "xorpd": "Bitwise Logical XOR of Packed Double Precision Floating-Point Values",
    "xorps": "Bitwise Logical XOR of Packed Single Precision Floating-Point Values",
    "xrelease": "Hardware Lock Elision Prefix Hints",
    "xresldtrk": "Resume Tracking Load Addresses",
    "xrstor": "Restore Processor Extended States",
    "xrstors": "Restore Processor Extended States Supervisor",
    "xsave": "Save Processor Extended States",
    "xsavec": "Save Processor Extended States With Compaction",
    "xsaveopt": "Save Processor Extended States Optimized",
    "xsaves": "Save Processor Extended States Supervisor",
    "xsetbv": "Set Extended Control Register",
    "xsusldtrk": "Suspend Tracking Load Addresses",
    "xtest": "Test if in Transactional Execution",
    "encls": "Execute an Enclave System Function of Specified Leaf Number",
    "encls[eadd]": "Add a Page to an Uninitialized Enclave",
    "encls[eaug]": "Add a Page to an Initialized Enclave",
    "encls[eblock]": "Mark a page in EPC as Blocked",
    "encls[ecreate]": "Create an SECS page in the Enclave Page Cache",
    "encls[edbgrd]": "Read From a Debug Enclave",
    "encls[edbgwr]": "Write to a Debug Enclave",
    "encls[eextend]": "Extend Uninitialized Enclave Measurement by 256 Bytes",
    "encls[einit]": "Initialize an Enclave for Execution",
    "encls[eldbc]": "Load an EPC Page and Mark its State",
    "encls[eldb]": "Load an EPC Page and Mark its State",
    "encls[elduc]": "Load an EPC Page and Mark its State",
    "encls[eldu]": "Load an EPC Page and Mark its State",
    "encls[emodpr]": "Restrict the Permissions of an EPC Page",
    "encls[emodt]": "Change the Type of an EPC Page",
    "encls[epa]": "Add Version Array",
    "encls[erdinfo]": "Read Type and Status Information About an EPC Page",
    "encls[eremove]": "Remove a page from the EPC",
    "encls[etrackc]": "Activates EBLOCK Checks",
    "encls[etrack]": "Activates EBLOCK Checks",
    "encls[ewb]": "Invalidate an EPC Page and Write out to Main Memory",
    "enclu": "Execute an Enclave User Function of Specified Leaf Number",
    "enclu[eacceptcopy]": "Initialize a Pending Page",
    "enclu[eaccept]": "Accept Changes to an EPC Page",
    "enclu[edeccssa]": "Decrements TCS.CSSA",
    "enclu[eenter]": "Enters an Enclave",
    "enclu[eexit]": "Exits an Enclave",
    "enclu[egetkey]": "Retrieves a Cryptographic Key",
    "enclu[emodpe]": "Extend an EPC Page Permissions",
    "enclu[ereport]": "Create a Cryptographic Report of the Enclave",
    "enclu[eresume]": "Re-Enters an Enclave",
    "enclv": "Execute an Enclave VMM Function of Specified Leaf Number",
    "enclv[edecvirtchild]": "Decrement VIRTCHILDCNT in SECS",
    "enclv[eincvirtchild]": "Increment VIRTCHILDCNT in SECS",
    "enclv[esetcontext]": "Set the ENCLAVECONTEXT Field in SECS",
    "getsec[capabilities]": "Report the SMX Capabilities",
    "getsec[enteraccs]": "Execute Authenticated Chipset Code",
    "getsec[exitac]": "Exit Authenticated Code Execution Mode",
    "getsec[parameters]": "Report the SMX Parameters",
    "getsec[senter]": "Enter a Measured Environment",
    "getsec[sexit]": "Exit Measured Environment",
    "getsec[smctrl]": "SMX Mode Control",
    "getsec[wakeup]": "Wake Up Sleeping Processors in Measured Environment",
    "invept": "Invalidate Translations Derived from EPT",
    "invvpid": "Invalidate Translations Based on VPID",
    "vmcall": "Call to VM Monitor",
    "vmclear": "Clear Virtual-Machine Control Structure",
    "vmfunc": "Invoke VM function",
    "vmlaunch": "Launch/Resume Virtual Machine",
    "vmptrld": "Load Pointer to Virtual-Machine Control Structure",
    "vmptrst": "Store Pointer to Virtual-Machine Control Structure",
    "vmread": "Read Field from Virtual-Machine Control Structure",
    "vmresume": "Launch/Resume Virtual Machine",
    "vmresume ": "Resume Virtual Machine",
    "vmwrite": "Write Field to Virtual-Machine Control Structure",
    "vmxoff": "Leave VMX Operation",
    "vmxon": "Enter VMX Operation",
    "prefetchwt1": "Prefetch Vector Data Into Caches With Intent to Write and T1 Hint",
    "v4fmaddps": "Packed Single Precision Floating-Point Fused Multiply-Add(4-Iterations)",
    "v4fmaddss": "Scalar Single Precision Floating-Point Fused Multiply-Add(4-Iterations)",
    "v4fnmaddps": "Packed Single Precision Floating-Point Fused Multiply-Add(4-Iterations)",
    "v4fnmaddss": "Scalar Single Precision Floating-Point Fused Multiply-Add(4-Iterations)",
    "vexp2pd": "Approximation to the Exponential 2^x of Packed Double Precision Floating-PointValues With Less Than 2^-23 Relative Error",
    "vexp2ps": "Approximation to the Exponential 2^x of Packed Single Precision Floating-PointValues With Less Than 2^-23 Relative Error",
    "vgatherpf0dpd": "Sparse PrefetchPacked SP/DP Data Values With Signed Dword, Signed Qword Indices Using T0 Hint",
    "vgatherpf0dps": "Sparse PrefetchPacked SP/DP Data Values With Signed Dword, Signed Qword Indices Using T0 Hint",
    "vgatherpf0qpd": "Sparse PrefetchPacked SP/DP Data Values With Signed Dword, Signed Qword Indices Using T0 Hint",
    "vgatherpf0qps": "Sparse PrefetchPacked SP/DP Data Values With Signed Dword, Signed Qword Indices Using T0 Hint",
    "vgatherpf1dpd": "Sparse PrefetchPacked SP/DP Data Values With Signed Dword, Signed Qword Indices Using T1 Hint",
    "vgatherpf1dps": "Sparse PrefetchPacked SP/DP Data Values With Signed Dword, Signed Qword Indices Using T1 Hint",
    "vgatherpf1qpd": "Sparse PrefetchPacked SP/DP Data Values With Signed Dword, Signed Qword Indices Using T1 Hint",
    "vgatherpf1qps": "Sparse PrefetchPacked SP/DP Data Values With Signed Dword, Signed Qword Indices Using T1 Hint",
    "vp4dpwssd": "Dot Product of Signed Words With Dword Accumulation (4-Iterations)",
    "vp4dpwssds": "Dot Product of Signed Words With Dword Accumulation and Saturation(4-Iterations)",
    "vrcp28pd": "Approximation to the Reciprocal of Packed Double Precision Floating-Point ValuesWith Less Than 2^-28 Relative Error",
    "vrcp28ps": "Approximation to the Reciprocal of Packed Single Precision Floating-Point ValuesWith Less Than 2^-28 Relative Error",
    "vrcp28sd": "Approximation to the Reciprocal of Scalar Double Precision Floating-Point ValueWith Less Than 2^-28 Relative Error",
    "vrcp28ss": "Approximation to the Reciprocal of Scalar Single Precision Floating-Point ValueWith Less Than 2^-28 Relative Error",
    "vrsqrt28pd": "Approximation to the Reciprocal Square Root of Packed Double PrecisionFloating-Point Values With Less Than 2^-28 Relative Error",
    "vrsqrt28ps": "Approximation to the Reciprocal Square Root of Packed Single PrecisionFloating-Point Values With Less Than 2^-28 Relative Error",
    "vrsqrt28sd": "Approximation to the Reciprocal Square Root of Scalar Double PrecisionFloating-Point Value With Less Than 2^-28 Relative Error",
    "vrsqrt28ss": "Approximation to the Reciprocal Square Root of Scalar Single Precision Floating-Point Value With Less Than 2^-28 Relative Error",
    "vscatterpf0dpd": "Sparse PrefetchPacked SP/DP Data Values with Signed Dword, Signed Qword Indices Using T0 Hint With Intentto Write",
    "vscatterpf0dps": "Sparse PrefetchPacked SP/DP Data Values with Signed Dword, Signed Qword Indices Using T0 Hint With Intentto Write",
    "vscatterpf0qpd": "Sparse PrefetchPacked SP/DP Data Values with Signed Dword, Signed Qword Indices Using T0 Hint With Intentto Write",
    "vscatterpf0qps": "Sparse PrefetchPacked SP/DP Data Values with Signed Dword, Signed Qword Indices Using T0 Hint With Intentto Write",
    "vscatterpf1dpd": "Sparse PrefetchPacked SP/DP Data Values With Signed Dword, Signed Qword Indices Using T1 Hint With Intentto Write",
    "vscatterpf1dps": "Sparse PrefetchPacked SP/DP Data Values With Signed Dword, Signed Qword Indices Using T1 Hint With Intentto Write",
    "vscatterpf1qpd": "Sparse PrefetchPacked SP/DP Data Values With Signed Dword, Signed Qword Indices Using T1 Hint With Intentto Write",
    "vscatterpf1qps": "Sparse PrefetchPacked SP/DP Data Values With Signed Dword, Signed Qword Indices Using T1 Hint With Intentto Write",
}
